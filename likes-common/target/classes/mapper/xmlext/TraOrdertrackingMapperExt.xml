<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.likes.common.mybatis.mapperext.tra.TraOrdertrackingMapperExt">
  <resultMap id="BaseResultMap" type="com.likes.common.mybatis.entity.TraOrdertracking">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="trackid" jdbcType="BIGINT" property="trackid" />
    <result column="orderid" jdbcType="BIGINT" property="orderid" />
    <result column="trackdate" jdbcType="TIMESTAMP" property="trackdate" />
    <result column="trackbody" jdbcType="VARCHAR" property="trackbody" />
    <result column="operuse" jdbcType="VARCHAR" property="operuse" />
    <result column="orderstatus" jdbcType="VARCHAR" property="orderstatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    trackid, orderid, trackdate, trackbody, operuse, orderstatus
  </sql>

  <insert id="insertTraOrdertracking" keyColumn="trackid" keyProperty="trackid"
          parameterType="com.likes.common.mybatis.entity.TraOrdertracking" useGeneratedKeys="true">
    insert into tra_ordertracking (orderid, trackdate,
      trackbody, operuse, orderstatus
      )
    SELECT
    #{orderid,jdbcType=BIGINT}, #{trackdate,jdbcType=TIMESTAMP},
      #{trackbody,jdbcType=VARCHAR}, #{operuse,jdbcType=VARCHAR}, #{orderstatus,jdbcType=VARCHAR}

     WHERE
       NOT EXISTS
		(SELECT m.orderid FROM tra_ordertracking m
		WHERE  m.orderid = #{orderid}
		AND m.orderstatus = #{orderstatus}
		LIMIT 1
		)

  </insert>
</mapper>