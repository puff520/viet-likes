<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.likes.common.mybatis.mapperext.anchor.BasGuardMapperExt">

    <resultMap id="BaseResultMap" type="com.likes.common.mybatis.entity.anchor.BasGuard">
        <id column="guardid" jdbcType="BIGINT" property="guardid"/>
        <result column="roomid" jdbcType="BIGINT" property="roomid"/>
        <result column="accno" jdbcType="VARCHAR" property="accno"/>
        <result column="refid" jdbcType="BIGINT" property="refid"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        guardid, roomid, accno, refid, is_delete, create_user, create_time, update_user, update_time
    </sql>

    <select id="getList" parameterType="com.likes.common.model.dto.bas.BasGuardReq" resultType="com.likes.common.model.dto.bas.BasGuardResp">
        select bg.*, mb.nickname, mb.headimg
        from bas_guard bg
        inner join mem_baseinfo mb on bg.accno = mb.accno and mb.is_delete = b'0'
        inner join bas_anchorroom ba on bg.roomid = ba.roomid and ba.is_delete = b'0'
        and ba.accno = #{accno,jdbcType=VARCHAR}
        <if test="nickname != null and nickname != ''">
            mb.nickname LIKE CONCAT('%',#{accno,jdbcType=VARCHAR},'%')
        </if>
        where bg.is_delete = b'0'
        and bg.roomid = #{roomid,jdbcType=BIGINT}
        order by bg.guardid desc
    </select>

</mapper>