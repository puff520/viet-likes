<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.likes.common.mybatis.mapper.MemLoginMapper">
  <resultMap id="BaseResultMap" type="com.likes.common.mybatis.entity.MemLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="loginid" jdbcType="BIGINT" property="loginid" />
    <result column="accno" jdbcType="VARCHAR" property="accno" />
    <result column="acclogin" jdbcType="VARCHAR" property="acclogin" />
    <result column="logintype" jdbcType="DECIMAL" property="logintype" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="passwordmd5" jdbcType="VARCHAR" property="passwordmd5" />
    <result column="paypassword" jdbcType="VARCHAR" property="paypassword" />
    <result column="accstatus" jdbcType="DECIMAL" property="accstatus" />
    <result column="lastlogindate" jdbcType="TIMESTAMP" property="lastlogindate" />
    <result column="loginnum" jdbcType="INTEGER" property="loginnum" />
    <result column="clintipadd" jdbcType="VARCHAR" property="clintipadd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    loginid, accno, acclogin, logintype, `password`, passwordmd5, paypassword, accstatus, 
    lastlogindate, loginnum, clintipadd
  </sql>
  <select id="selectByExample" parameterType="com.likes.common.mybatis.entity.MemLoginExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mem_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and limit&gt;=0 and offset != null">
      limit #{offset} , #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from mem_login
    where loginid = #{loginid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mem_login
    where loginid = #{loginid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.likes.common.mybatis.entity.MemLoginExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mem_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="loginid" parameterType="com.likes.common.mybatis.entity.MemLogin" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mem_login (accno, acclogin, logintype, 
      `password`, passwordmd5, paypassword, 
      accstatus, lastlogindate, loginnum, 
      clintipadd)
    values (#{accno,jdbcType=VARCHAR}, #{acclogin,jdbcType=VARCHAR}, #{logintype,jdbcType=DECIMAL}, 
      #{password,jdbcType=VARCHAR}, #{passwordmd5,jdbcType=VARCHAR}, #{paypassword,jdbcType=VARCHAR}, 
      #{accstatus,jdbcType=DECIMAL}, #{lastlogindate,jdbcType=TIMESTAMP}, #{loginnum,jdbcType=INTEGER}, 
      #{clintipadd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="loginid" parameterType="com.likes.common.mybatis.entity.MemLogin" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mem_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accno != null">
        accno,
      </if>
      <if test="acclogin != null">
        acclogin,
      </if>
      <if test="logintype != null">
        logintype,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="passwordmd5 != null">
        passwordmd5,
      </if>
      <if test="paypassword != null">
        paypassword,
      </if>
      <if test="accstatus != null">
        accstatus,
      </if>
      <if test="lastlogindate != null">
        lastlogindate,
      </if>
      <if test="loginnum != null">
        loginnum,
      </if>
      <if test="clintipadd != null">
        clintipadd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accno != null">
        #{accno,jdbcType=VARCHAR},
      </if>
      <if test="acclogin != null">
        #{acclogin,jdbcType=VARCHAR},
      </if>
      <if test="logintype != null">
        #{logintype,jdbcType=DECIMAL},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordmd5 != null">
        #{passwordmd5,jdbcType=VARCHAR},
      </if>
      <if test="paypassword != null">
        #{paypassword,jdbcType=VARCHAR},
      </if>
      <if test="accstatus != null">
        #{accstatus,jdbcType=DECIMAL},
      </if>
      <if test="lastlogindate != null">
        #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginnum != null">
        #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="clintipadd != null">
        #{clintipadd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.likes.common.mybatis.entity.MemLoginExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from mem_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mem_login
    <set>
      <if test="record.loginid != null">
        loginid = #{record.loginid,jdbcType=BIGINT},
      </if>
      <if test="record.accno != null">
        accno = #{record.accno,jdbcType=VARCHAR},
      </if>
      <if test="record.acclogin != null">
        acclogin = #{record.acclogin,jdbcType=VARCHAR},
      </if>
      <if test="record.logintype != null">
        logintype = #{record.logintype,jdbcType=DECIMAL},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordmd5 != null">
        passwordmd5 = #{record.passwordmd5,jdbcType=VARCHAR},
      </if>
      <if test="record.paypassword != null">
        paypassword = #{record.paypassword,jdbcType=VARCHAR},
      </if>
      <if test="record.accstatus != null">
        accstatus = #{record.accstatus,jdbcType=DECIMAL},
      </if>
      <if test="record.lastlogindate != null">
        lastlogindate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginnum != null">
        loginnum = #{record.loginnum,jdbcType=INTEGER},
      </if>
      <if test="record.clintipadd != null">
        clintipadd = #{record.clintipadd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mem_login
    set loginid = #{record.loginid,jdbcType=BIGINT},
      accno = #{record.accno,jdbcType=VARCHAR},
      acclogin = #{record.acclogin,jdbcType=VARCHAR},
      logintype = #{record.logintype,jdbcType=DECIMAL},
      `password` = #{record.password,jdbcType=VARCHAR},
      passwordmd5 = #{record.passwordmd5,jdbcType=VARCHAR},
      paypassword = #{record.paypassword,jdbcType=VARCHAR},
      accstatus = #{record.accstatus,jdbcType=DECIMAL},
      lastlogindate = #{record.lastlogindate,jdbcType=TIMESTAMP},
      loginnum = #{record.loginnum,jdbcType=INTEGER},
      clintipadd = #{record.clintipadd,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.likes.common.mybatis.entity.MemLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mem_login
    <set>
      <if test="accno != null">
        accno = #{accno,jdbcType=VARCHAR},
      </if>
      <if test="acclogin != null">
        acclogin = #{acclogin,jdbcType=VARCHAR},
      </if>
      <if test="logintype != null">
        logintype = #{logintype,jdbcType=DECIMAL},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordmd5 != null">
        passwordmd5 = #{passwordmd5,jdbcType=VARCHAR},
      </if>
      <if test="paypassword != null">
        paypassword = #{paypassword,jdbcType=VARCHAR},
      </if>
      <if test="accstatus != null">
        accstatus = #{accstatus,jdbcType=DECIMAL},
      </if>
      <if test="lastlogindate != null">
        lastlogindate = #{lastlogindate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginnum != null">
        loginnum = #{loginnum,jdbcType=INTEGER},
      </if>
      <if test="clintipadd != null">
        clintipadd = #{clintipadd,jdbcType=VARCHAR},
      </if>
    </set>
    where loginid = #{loginid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.likes.common.mybatis.entity.MemLogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mem_login
    set accno = #{accno,jdbcType=VARCHAR},
      acclogin = #{acclogin,jdbcType=VARCHAR},
      logintype = #{logintype,jdbcType=DECIMAL},
      `password` = #{password,jdbcType=VARCHAR},
      passwordmd5 = #{passwordmd5,jdbcType=VARCHAR},
      paypassword = #{paypassword,jdbcType=VARCHAR},
      accstatus = #{accstatus,jdbcType=DECIMAL},
      lastlogindate = #{lastlogindate,jdbcType=TIMESTAMP},
      loginnum = #{loginnum,jdbcType=INTEGER},
      clintipadd = #{clintipadd,jdbcType=VARCHAR}
    where loginid = #{loginid,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.likes.common.mybatis.entity.MemLoginExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mem_login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>

  <select
          id="selectSelectiveMemLogin"
          resultType="com.likes.common.mybatis.entity.MemLogin">
    select
    <include refid="Base_Column_List" />
    from mem_login
    where
    1=1
    <if test="loginParam.acclogin != null">
      and acclogin = #{loginParam.acclogin}
    </if>
    <if test="loginParam.accstatus != null">
      and accstatus = #{loginParam.accstatus}
    </if>
    <if test="loginParam.passwordmd5 != null">
      and passwordmd5 = #{loginParam.passwordmd5}
    </if>
    <if test="logintypes!=null and logintypes.size() > 0">
      and logintype in
      <foreach item="item" index="index" collection="logintypes" open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
  </select>
</mapper>