<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.likes.common.mybatis.mapperext.anchor.BasPraiseMapperExt">
    <resultMap id="BaseResultMap" type="com.likes.common.mybatis.entity.anchor.BasPraise">
        <id column="praiseid" jdbcType="BIGINT" property="praiseid"/>
        <result column="commid" jdbcType="BIGINT" property="commid"/>
        <result column="articleid" jdbcType="BIGINT" property="articleid"/>
        <result column="videoid" jdbcType="BIGINT" property="videoid"/>
        <result column="accno" jdbcType="VARCHAR" property="accno"/>
        <result column="is_delete" jdbcType="BIT" property="isDelete"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    praiseid, commid, articleid, videoid, accno, is_delete as isDelete, create_user, create_time, update_user, update_time
  </sql>

    <select id="findByParam" parameterType="com.likes.common.model.request.VideoRequest"
            resultType="com.likes.common.mybatis.entity.anchor.BasPraise">
        select
        <include refid="Base_Column_List"/>
        from bas_praise
        where accno = #{accno}
        <if test="videoid != null">
            and videoid = #{videoid}
        </if>
        <if test="articleid != null">
            and articleid = #{articleid}
        </if>
        <if test="commid != null">
            and commid = #{commid}
        </if>
        limit 1
    </select>

    <select id="findByParamBasPraise" parameterType="com.likes.common.model.request.VideoRequest"
            resultType="com.likes.common.mybatis.entity.anchor.BasPraise">
        select
        <include refid="Base_Column_List"/>
        from bas_praise
        where accno = #{accno}
        and videoid is null
        and articleid = #{articleid}
        and commid is null
        limit 1

    </select>


    <select id="getIds" parameterType="com.likes.common.model.request.UsersRequest" resultType="java.lang.Long">
        select DISTINCT
         bf.videoid
        FROM bas_praise bf
        WHERE  bf.accno = #{accno} AND bf.is_delete = b'0'
            AND bf.articleid IS NULL
            AND bf.commid is NULL
            and bf.videoid IS NOT NULL
    </select>


</mapper>