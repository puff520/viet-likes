package com.likes.common.mybatis.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class ChessOrder implements Serializable {
    /**
     * 字段: chess_order.cheorderid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 时时彩订单id
     *
     * @mbggenerated
     */
    private Long cheorderid;

    /**
     * 字段: chess_order.orderid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 订单id
     *
     * @mbggenerated
     */
    private Long orderid;

    /**
     * 字段: chess_order.chekindid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 棋牌分类id
     *
     * @mbggenerated
     */
    private Long chekindid;

    /**
     * 字段: chess_order.kindid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 游戏id
     *
     * @mbggenerated
     */
    private Long kindid;

    /**
     * 字段: chess_order.channelid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 渠道id
     *
     * @mbggenerated
     */
    private Long channelid;

    /**
     * 字段: chess_order.gameid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 64<br/>
     * 说明: 游戏局号id
     *
     * @mbggenerated
     */
    private String gameid;

    /**
     * 字段: chess_order.account<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 玩家账号
     *
     * @mbggenerated
     */
    private String account;

    /**
     * 字段: chess_order.sumamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 每注金额 （元）
     *
     * @mbggenerated
     */
    private BigDecimal sumamt;

    /**
     * 字段: chess_order.status<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 中奖： 0派奖中 7平局 8已中奖 9未中奖  
     *
     * @mbggenerated
     */
    private Integer status;

    /**
     * 字段: chess_order.winamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 中奖金额 （元）  未中奖为0
     *
     * @mbggenerated
     */
    private BigDecimal winamt;

    /**
     * 字段: chess_order.revenue<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 抽水金额
     *
     * @mbggenerated
     */
    private BigDecimal revenue;

    /**
     * 字段: chess_order.buttonnote<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1000<br/>
     * 说明: 备注说明
     *
     * @mbggenerated
     */
    private String buttonnote;

    /**
     * 字段: chess_order.startdate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    private Date startdate;

    /**
     * 字段: chess_order.stopdate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 最后修改时间
     *
     * @mbggenerated
     */
    private Date stopdate;

    /**
     * 字段: chess_order.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    private Boolean isDelete;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table chess_order
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return chess_order.cheorderid: 时时彩订单id
     *
     * @mbggenerated
     */
    public Long getCheorderid() {
        return cheorderid;
    }

    /**
     * 字段: chess_order.cheorderid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 时时彩订单id
     *
     * @mbggenerated
     */
    public void setCheorderid(Long cheorderid) {
        this.cheorderid = cheorderid;
    }

    /**
     * @return chess_order.orderid: 订单id
     *
     * @mbggenerated
     */
    public Long getOrderid() {
        return orderid;
    }

    /**
     * 字段: chess_order.orderid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 订单id
     *
     * @mbggenerated
     */
    public void setOrderid(Long orderid) {
        this.orderid = orderid;
    }

    /**
     * @return chess_order.chekindid: 棋牌分类id
     *
     * @mbggenerated
     */
    public Long getChekindid() {
        return chekindid;
    }

    /**
     * 字段: chess_order.chekindid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 棋牌分类id
     *
     * @mbggenerated
     */
    public void setChekindid(Long chekindid) {
        this.chekindid = chekindid;
    }

    /**
     * @return chess_order.kindid: 游戏id
     *
     * @mbggenerated
     */
    public Long getKindid() {
        return kindid;
    }

    /**
     * 字段: chess_order.kindid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 游戏id
     *
     * @mbggenerated
     */
    public void setKindid(Long kindid) {
        this.kindid = kindid;
    }

    /**
     * @return chess_order.channelid: 渠道id
     *
     * @mbggenerated
     */
    public Long getChannelid() {
        return channelid;
    }

    /**
     * 字段: chess_order.channelid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 渠道id
     *
     * @mbggenerated
     */
    public void setChannelid(Long channelid) {
        this.channelid = channelid;
    }

    /**
     * @return chess_order.gameid: 游戏局号id
     *
     * @mbggenerated
     */
    public String getGameid() {
        return gameid;
    }

    /**
     * 字段: chess_order.gameid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 64<br/>
     * 说明: 游戏局号id
     *
     * @mbggenerated
     */
    public void setGameid(String gameid) {
        this.gameid = gameid;
    }

    /**
     * @return chess_order.account: 玩家账号
     *
     * @mbggenerated
     */
    public String getAccount() {
        return account;
    }

    /**
     * 字段: chess_order.account<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 玩家账号
     *
     * @mbggenerated
     */
    public void setAccount(String account) {
        this.account = account;
    }

    /**
     * @return chess_order.sumamt: 每注金额 （元）
     *
     * @mbggenerated
     */
    public BigDecimal getSumamt() {
        return sumamt;
    }

    /**
     * 字段: chess_order.sumamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 每注金额 （元）
     *
     * @mbggenerated
     */
    public void setSumamt(BigDecimal sumamt) {
        this.sumamt = sumamt;
    }

    /**
     * @return chess_order.status: 中奖： 0派奖中 7平局 8已中奖 9未中奖  
     *
     * @mbggenerated
     */
    public Integer getStatus() {
        return status;
    }

    /**
     * 字段: chess_order.status<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 中奖： 0派奖中 7平局 8已中奖 9未中奖  
     *
     * @mbggenerated
     */
    public void setStatus(Integer status) {
        this.status = status;
    }

    /**
     * @return chess_order.winamt: 中奖金额 （元）  未中奖为0
     *
     * @mbggenerated
     */
    public BigDecimal getWinamt() {
        return winamt;
    }

    /**
     * 字段: chess_order.winamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 中奖金额 （元）  未中奖为0
     *
     * @mbggenerated
     */
    public void setWinamt(BigDecimal winamt) {
        this.winamt = winamt;
    }

    /**
     * @return chess_order.revenue: 抽水金额
     *
     * @mbggenerated
     */
    public BigDecimal getRevenue() {
        return revenue;
    }

    /**
     * 字段: chess_order.revenue<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 抽水金额
     *
     * @mbggenerated
     */
    public void setRevenue(BigDecimal revenue) {
        this.revenue = revenue;
    }

    /**
     * @return chess_order.buttonnote: 备注说明
     *
     * @mbggenerated
     */
    public String getButtonnote() {
        return buttonnote;
    }

    /**
     * 字段: chess_order.buttonnote<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1000<br/>
     * 说明: 备注说明
     *
     * @mbggenerated
     */
    public void setButtonnote(String buttonnote) {
        this.buttonnote = buttonnote;
    }

    /**
     * @return chess_order.startdate: 创建时间
     *
     * @mbggenerated
     */
    public Date getStartdate() {
        return startdate;
    }

    /**
     * 字段: chess_order.startdate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    public void setStartdate(Date startdate) {
        this.startdate = startdate;
    }

    /**
     * @return chess_order.stopdate: 最后修改时间
     *
     * @mbggenerated
     */
    public Date getStopdate() {
        return stopdate;
    }

    /**
     * 字段: chess_order.stopdate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 最后修改时间
     *
     * @mbggenerated
     */
    public void setStopdate(Date stopdate) {
        this.stopdate = stopdate;
    }

    /**
     * @return chess_order.is_delete: 是否删除
     *
     * @mbggenerated
     */
    public Boolean getIsDelete() {
        return isDelete;
    }

    /**
     * 字段: chess_order.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    public void setIsDelete(Boolean isDelete) {
        this.isDelete = isDelete;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chess_order
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        ChessOrder other = (ChessOrder) that;
        return (this.getCheorderid() == null ? other.getCheorderid() == null : this.getCheorderid().equals(other.getCheorderid()))
            && (this.getOrderid() == null ? other.getOrderid() == null : this.getOrderid().equals(other.getOrderid()))
            && (this.getChekindid() == null ? other.getChekindid() == null : this.getChekindid().equals(other.getChekindid()))
            && (this.getKindid() == null ? other.getKindid() == null : this.getKindid().equals(other.getKindid()))
            && (this.getChannelid() == null ? other.getChannelid() == null : this.getChannelid().equals(other.getChannelid()))
            && (this.getGameid() == null ? other.getGameid() == null : this.getGameid().equals(other.getGameid()))
            && (this.getAccount() == null ? other.getAccount() == null : this.getAccount().equals(other.getAccount()))
            && (this.getSumamt() == null ? other.getSumamt() == null : this.getSumamt().equals(other.getSumamt()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()))
            && (this.getWinamt() == null ? other.getWinamt() == null : this.getWinamt().equals(other.getWinamt()))
            && (this.getRevenue() == null ? other.getRevenue() == null : this.getRevenue().equals(other.getRevenue()))
            && (this.getButtonnote() == null ? other.getButtonnote() == null : this.getButtonnote().equals(other.getButtonnote()))
            && (this.getStartdate() == null ? other.getStartdate() == null : this.getStartdate().equals(other.getStartdate()))
            && (this.getStopdate() == null ? other.getStopdate() == null : this.getStopdate().equals(other.getStopdate()))
            && (this.getIsDelete() == null ? other.getIsDelete() == null : this.getIsDelete().equals(other.getIsDelete()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chess_order
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getCheorderid() == null) ? 0 : getCheorderid().hashCode());
        result = prime * result + ((getOrderid() == null) ? 0 : getOrderid().hashCode());
        result = prime * result + ((getChekindid() == null) ? 0 : getChekindid().hashCode());
        result = prime * result + ((getKindid() == null) ? 0 : getKindid().hashCode());
        result = prime * result + ((getChannelid() == null) ? 0 : getChannelid().hashCode());
        result = prime * result + ((getGameid() == null) ? 0 : getGameid().hashCode());
        result = prime * result + ((getAccount() == null) ? 0 : getAccount().hashCode());
        result = prime * result + ((getSumamt() == null) ? 0 : getSumamt().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        result = prime * result + ((getWinamt() == null) ? 0 : getWinamt().hashCode());
        result = prime * result + ((getRevenue() == null) ? 0 : getRevenue().hashCode());
        result = prime * result + ((getButtonnote() == null) ? 0 : getButtonnote().hashCode());
        result = prime * result + ((getStartdate() == null) ? 0 : getStartdate().hashCode());
        result = prime * result + ((getStopdate() == null) ? 0 : getStopdate().hashCode());
        result = prime * result + ((getIsDelete() == null) ? 0 : getIsDelete().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chess_order
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", cheorderid=").append(cheorderid);
        sb.append(", orderid=").append(orderid);
        sb.append(", chekindid=").append(chekindid);
        sb.append(", kindid=").append(kindid);
        sb.append(", channelid=").append(channelid);
        sb.append(", gameid=").append(gameid);
        sb.append(", account=").append(account);
        sb.append(", sumamt=").append(sumamt);
        sb.append(", status=").append(status);
        sb.append(", winamt=").append(winamt);
        sb.append(", revenue=").append(revenue);
        sb.append(", buttonnote=").append(buttonnote);
        sb.append(", startdate=").append(startdate);
        sb.append(", stopdate=").append(stopdate);
        sb.append(", isDelete=").append(isDelete);
        sb.append("]");
        return sb.toString();
    }
}