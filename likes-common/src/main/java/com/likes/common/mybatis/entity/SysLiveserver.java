package com.likes.common.mybatis.entity;

import java.io.Serializable;
import java.util.Date;

public class SysLiveserver implements Serializable {
    /**
     * 字段: sys_liveserver.liveid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 直播服务器id
     *
     * @mbggenerated
     */
    private Long liveid;

    /**
     * 字段: sys_liveserver.servername<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 服务器名称
     *
     * @mbggenerated
     */
    private String servername;

    /**
     * 字段: sys_liveserver.serverurl<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 400<br/>
     * 说明: 服务器地址
     *
     * @mbggenerated
     */
    private String serverurl;

    /**
     * 字段: sys_liveserver.weight<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 服务器权重
     *
     * @mbggenerated
     */
    private Integer weight;

    /**
     * 字段: sys_liveserver.region<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 服务器所在区域名称

南方：江苏 安徽 湖北 重庆 四川 西藏 云南 贵州 湖南 江西 广西 广东 福建 浙江 上海 海南（台港澳）

北方：山东 河南 山西 陕西 甘肃 青海 新疆 河北 天津 北京 内蒙古 辽宁 吉林 黑龙江 宁夏。
     *
     * @mbggenerated
     */
    private String region;

    /**
     * 字段: sys_liveserver.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    private Boolean isDelete;

    /**
     * 字段: sys_liveserver.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    private String createUser;

    /**
     * 字段: sys_liveserver.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    private Date createTime;

    /**
     * 字段: sys_liveserver.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    private String updateUser;

    /**
     * 字段: sys_liveserver.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    private Date updateTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_liveserver
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return sys_liveserver.liveid: 直播服务器id
     *
     * @mbggenerated
     */
    public Long getLiveid() {
        return liveid;
    }

    /**
     * 字段: sys_liveserver.liveid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 直播服务器id
     *
     * @mbggenerated
     */
    public void setLiveid(Long liveid) {
        this.liveid = liveid;
    }

    /**
     * @return sys_liveserver.servername: 服务器名称
     *
     * @mbggenerated
     */
    public String getServername() {
        return servername;
    }

    /**
     * 字段: sys_liveserver.servername<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 服务器名称
     *
     * @mbggenerated
     */
    public void setServername(String servername) {
        this.servername = servername;
    }

    /**
     * @return sys_liveserver.serverurl: 服务器地址
     *
     * @mbggenerated
     */
    public String getServerurl() {
        return serverurl;
    }

    /**
     * 字段: sys_liveserver.serverurl<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 400<br/>
     * 说明: 服务器地址
     *
     * @mbggenerated
     */
    public void setServerurl(String serverurl) {
        this.serverurl = serverurl;
    }

    /**
     * @return sys_liveserver.weight: 服务器权重
     *
     * @mbggenerated
     */
    public Integer getWeight() {
        return weight;
    }

    /**
     * 字段: sys_liveserver.weight<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 服务器权重
     *
     * @mbggenerated
     */
    public void setWeight(Integer weight) {
        this.weight = weight;
    }

    /**
     * @return sys_liveserver.region: 服务器所在区域名称

南方：江苏 安徽 湖北 重庆 四川 西藏 云南 贵州 湖南 江西 广西 广东 福建 浙江 上海 海南（台港澳）

北方：山东 河南 山西 陕西 甘肃 青海 新疆 河北 天津 北京 内蒙古 辽宁 吉林 黑龙江 宁夏。
     *
     * @mbggenerated
     */
    public String getRegion() {
        return region;
    }

    /**
     * 字段: sys_liveserver.region<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 服务器所在区域名称

南方：江苏 安徽 湖北 重庆 四川 西藏 云南 贵州 湖南 江西 广西 广东 福建 浙江 上海 海南（台港澳）

北方：山东 河南 山西 陕西 甘肃 青海 新疆 河北 天津 北京 内蒙古 辽宁 吉林 黑龙江 宁夏。
     *
     * @mbggenerated
     */
    public void setRegion(String region) {
        this.region = region;
    }

    /**
     * @return sys_liveserver.is_delete: 是否删除
     *
     * @mbggenerated
     */
    public Boolean getIsDelete() {
        return isDelete;
    }

    /**
     * 字段: sys_liveserver.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    public void setIsDelete(Boolean isDelete) {
        this.isDelete = isDelete;
    }

    /**
     * @return sys_liveserver.create_user: 创建人
     *
     * @mbggenerated
     */
    public String getCreateUser() {
        return createUser;
    }

    /**
     * 字段: sys_liveserver.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    /**
     * @return sys_liveserver.create_time: 创建时间
     *
     * @mbggenerated
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 字段: sys_liveserver.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * @return sys_liveserver.update_user: 最后修改人
     *
     * @mbggenerated
     */
    public String getUpdateUser() {
        return updateUser;
    }

    /**
     * 字段: sys_liveserver.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

    /**
     * @return sys_liveserver.update_time: 更新时间
     *
     * @mbggenerated
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 字段: sys_liveserver.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_liveserver
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        SysLiveserver other = (SysLiveserver) that;
        return (this.getLiveid() == null ? other.getLiveid() == null : this.getLiveid().equals(other.getLiveid()))
            && (this.getServername() == null ? other.getServername() == null : this.getServername().equals(other.getServername()))
            && (this.getServerurl() == null ? other.getServerurl() == null : this.getServerurl().equals(other.getServerurl()))
            && (this.getWeight() == null ? other.getWeight() == null : this.getWeight().equals(other.getWeight()))
            && (this.getRegion() == null ? other.getRegion() == null : this.getRegion().equals(other.getRegion()))
            && (this.getIsDelete() == null ? other.getIsDelete() == null : this.getIsDelete().equals(other.getIsDelete()))
            && (this.getCreateUser() == null ? other.getCreateUser() == null : this.getCreateUser().equals(other.getCreateUser()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateUser() == null ? other.getUpdateUser() == null : this.getUpdateUser().equals(other.getUpdateUser()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_liveserver
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getLiveid() == null) ? 0 : getLiveid().hashCode());
        result = prime * result + ((getServername() == null) ? 0 : getServername().hashCode());
        result = prime * result + ((getServerurl() == null) ? 0 : getServerurl().hashCode());
        result = prime * result + ((getWeight() == null) ? 0 : getWeight().hashCode());
        result = prime * result + ((getRegion() == null) ? 0 : getRegion().hashCode());
        result = prime * result + ((getIsDelete() == null) ? 0 : getIsDelete().hashCode());
        result = prime * result + ((getCreateUser() == null) ? 0 : getCreateUser().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateUser() == null) ? 0 : getUpdateUser().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_liveserver
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", liveid=").append(liveid);
        sb.append(", servername=").append(servername);
        sb.append(", serverurl=").append(serverurl);
        sb.append(", weight=").append(weight);
        sb.append(", region=").append(region);
        sb.append(", isDelete=").append(isDelete);
        sb.append(", createUser=").append(createUser);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateUser=").append(updateUser);
        sb.append(", updateTime=").append(updateTime);
        sb.append("]");
        return sb.toString();
    }
}