package com.likes.common.mybatis.entity;

import java.io.Serializable;
import java.util.Date;

public class SysAppface implements Serializable {
    /**
     * 字段: sys_appface.funbuttonid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 按钮id
     *
     * @mbggenerated
     */
    private Long funbuttonid;

    /**
     * 字段: sys_appface.funbuttonkind<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 按钮类别  发现页上部功能组 funfxtop
     *
     * @mbggenerated
     */
    private String funbuttonkind;

    /**
     * 字段: sys_appface.funbuttonname<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 按钮名称
     *
     * @mbggenerated
     */
    private String funbuttonname;

    /**
     * 字段: sys_appface.funbuttonlog<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 按钮图标
     *
     * @mbggenerated
     */
    private String funbuttonlog;

    /**
     * 字段: sys_appface.funbuttonlink<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 200<br/>
     * 说明: 按钮点击跳转链接
     *
     * @mbggenerated
     */
    private String funbuttonlink;

    /**
     * 字段: sys_appface.fbrefpara<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 400<br/>
     * 说明: 相关参数
     *
     * @mbggenerated
     */
    private String fbrefpara;

    /**
     * 字段: sys_appface.browsnum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 浏览量
     *
     * @mbggenerated
     */
    private Long browsnum;

    /**
     * 字段: sys_appface.sortby<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 排序权重
     *
     * @mbggenerated
     */
    private Integer sortby;

    /**
     * 字段: sys_appface.buttonnote<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 备注说明
     *
     * @mbggenerated
     */
    private String buttonnote;

    /**
     * 字段: sys_appface.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    private Boolean isDelete;

    /**
     * 字段: sys_appface.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    private String createUser;

    /**
     * 字段: sys_appface.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    private Date createTime;

    /**
     * 字段: sys_appface.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    private String updateUser;

    /**
     * 字段: sys_appface.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    private Date updateTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sys_appface
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return sys_appface.funbuttonid: 按钮id
     *
     * @mbggenerated
     */
    public Long getFunbuttonid() {
        return funbuttonid;
    }

    /**
     * 字段: sys_appface.funbuttonid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 按钮id
     *
     * @mbggenerated
     */
    public void setFunbuttonid(Long funbuttonid) {
        this.funbuttonid = funbuttonid;
    }

    /**
     * @return sys_appface.funbuttonkind: 按钮类别  发现页上部功能组 funfxtop
     *
     * @mbggenerated
     */
    public String getFunbuttonkind() {
        return funbuttonkind;
    }

    /**
     * 字段: sys_appface.funbuttonkind<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 按钮类别  发现页上部功能组 funfxtop
     *
     * @mbggenerated
     */
    public void setFunbuttonkind(String funbuttonkind) {
        this.funbuttonkind = funbuttonkind;
    }

    /**
     * @return sys_appface.funbuttonname: 按钮名称
     *
     * @mbggenerated
     */
    public String getFunbuttonname() {
        return funbuttonname;
    }

    /**
     * 字段: sys_appface.funbuttonname<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 20<br/>
     * 说明: 按钮名称
     *
     * @mbggenerated
     */
    public void setFunbuttonname(String funbuttonname) {
        this.funbuttonname = funbuttonname;
    }

    /**
     * @return sys_appface.funbuttonlog: 按钮图标
     *
     * @mbggenerated
     */
    public String getFunbuttonlog() {
        return funbuttonlog;
    }

    /**
     * 字段: sys_appface.funbuttonlog<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 按钮图标
     *
     * @mbggenerated
     */
    public void setFunbuttonlog(String funbuttonlog) {
        this.funbuttonlog = funbuttonlog;
    }

    /**
     * @return sys_appface.funbuttonlink: 按钮点击跳转链接
     *
     * @mbggenerated
     */
    public String getFunbuttonlink() {
        return funbuttonlink;
    }

    /**
     * 字段: sys_appface.funbuttonlink<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 200<br/>
     * 说明: 按钮点击跳转链接
     *
     * @mbggenerated
     */
    public void setFunbuttonlink(String funbuttonlink) {
        this.funbuttonlink = funbuttonlink;
    }

    /**
     * @return sys_appface.fbrefpara: 相关参数
     *
     * @mbggenerated
     */
    public String getFbrefpara() {
        return fbrefpara;
    }

    /**
     * 字段: sys_appface.fbrefpara<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 400<br/>
     * 说明: 相关参数
     *
     * @mbggenerated
     */
    public void setFbrefpara(String fbrefpara) {
        this.fbrefpara = fbrefpara;
    }

    /**
     * @return sys_appface.browsnum: 浏览量
     *
     * @mbggenerated
     */
    public Long getBrowsnum() {
        return browsnum;
    }

    /**
     * 字段: sys_appface.browsnum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 浏览量
     *
     * @mbggenerated
     */
    public void setBrowsnum(Long browsnum) {
        this.browsnum = browsnum;
    }

    /**
     * @return sys_appface.sortby: 排序权重
     *
     * @mbggenerated
     */
    public Integer getSortby() {
        return sortby;
    }

    /**
     * 字段: sys_appface.sortby<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 排序权重
     *
     * @mbggenerated
     */
    public void setSortby(Integer sortby) {
        this.sortby = sortby;
    }

    /**
     * @return sys_appface.buttonnote: 备注说明
     *
     * @mbggenerated
     */
    public String getButtonnote() {
        return buttonnote;
    }

    /**
     * 字段: sys_appface.buttonnote<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 备注说明
     *
     * @mbggenerated
     */
    public void setButtonnote(String buttonnote) {
        this.buttonnote = buttonnote;
    }

    /**
     * @return sys_appface.is_delete: 是否删除
     *
     * @mbggenerated
     */
    public Boolean getIsDelete() {
        return isDelete;
    }

    /**
     * 字段: sys_appface.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    public void setIsDelete(Boolean isDelete) {
        this.isDelete = isDelete;
    }

    /**
     * @return sys_appface.create_user: 创建人
     *
     * @mbggenerated
     */
    public String getCreateUser() {
        return createUser;
    }

    /**
     * 字段: sys_appface.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    /**
     * @return sys_appface.create_time: 创建时间
     *
     * @mbggenerated
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 字段: sys_appface.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * @return sys_appface.update_user: 最后修改人
     *
     * @mbggenerated
     */
    public String getUpdateUser() {
        return updateUser;
    }

    /**
     * 字段: sys_appface.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

    /**
     * @return sys_appface.update_time: 更新时间
     *
     * @mbggenerated
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 字段: sys_appface.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_appface
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        SysAppface other = (SysAppface) that;
        return (this.getFunbuttonid() == null ? other.getFunbuttonid() == null : this.getFunbuttonid().equals(other.getFunbuttonid()))
            && (this.getFunbuttonkind() == null ? other.getFunbuttonkind() == null : this.getFunbuttonkind().equals(other.getFunbuttonkind()))
            && (this.getFunbuttonname() == null ? other.getFunbuttonname() == null : this.getFunbuttonname().equals(other.getFunbuttonname()))
            && (this.getFunbuttonlog() == null ? other.getFunbuttonlog() == null : this.getFunbuttonlog().equals(other.getFunbuttonlog()))
            && (this.getFunbuttonlink() == null ? other.getFunbuttonlink() == null : this.getFunbuttonlink().equals(other.getFunbuttonlink()))
            && (this.getFbrefpara() == null ? other.getFbrefpara() == null : this.getFbrefpara().equals(other.getFbrefpara()))
            && (this.getBrowsnum() == null ? other.getBrowsnum() == null : this.getBrowsnum().equals(other.getBrowsnum()))
            && (this.getSortby() == null ? other.getSortby() == null : this.getSortby().equals(other.getSortby()))
            && (this.getButtonnote() == null ? other.getButtonnote() == null : this.getButtonnote().equals(other.getButtonnote()))
            && (this.getIsDelete() == null ? other.getIsDelete() == null : this.getIsDelete().equals(other.getIsDelete()))
            && (this.getCreateUser() == null ? other.getCreateUser() == null : this.getCreateUser().equals(other.getCreateUser()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateUser() == null ? other.getUpdateUser() == null : this.getUpdateUser().equals(other.getUpdateUser()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_appface
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getFunbuttonid() == null) ? 0 : getFunbuttonid().hashCode());
        result = prime * result + ((getFunbuttonkind() == null) ? 0 : getFunbuttonkind().hashCode());
        result = prime * result + ((getFunbuttonname() == null) ? 0 : getFunbuttonname().hashCode());
        result = prime * result + ((getFunbuttonlog() == null) ? 0 : getFunbuttonlog().hashCode());
        result = prime * result + ((getFunbuttonlink() == null) ? 0 : getFunbuttonlink().hashCode());
        result = prime * result + ((getFbrefpara() == null) ? 0 : getFbrefpara().hashCode());
        result = prime * result + ((getBrowsnum() == null) ? 0 : getBrowsnum().hashCode());
        result = prime * result + ((getSortby() == null) ? 0 : getSortby().hashCode());
        result = prime * result + ((getButtonnote() == null) ? 0 : getButtonnote().hashCode());
        result = prime * result + ((getIsDelete() == null) ? 0 : getIsDelete().hashCode());
        result = prime * result + ((getCreateUser() == null) ? 0 : getCreateUser().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateUser() == null) ? 0 : getUpdateUser().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_appface
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", funbuttonid=").append(funbuttonid);
        sb.append(", funbuttonkind=").append(funbuttonkind);
        sb.append(", funbuttonname=").append(funbuttonname);
        sb.append(", funbuttonlog=").append(funbuttonlog);
        sb.append(", funbuttonlink=").append(funbuttonlink);
        sb.append(", fbrefpara=").append(fbrefpara);
        sb.append(", browsnum=").append(browsnum);
        sb.append(", sortby=").append(sortby);
        sb.append(", buttonnote=").append(buttonnote);
        sb.append(", isDelete=").append(isDelete);
        sb.append(", createUser=").append(createUser);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateUser=").append(updateUser);
        sb.append(", updateTime=").append(updateTime);
        sb.append("]");
        return sb.toString();
    }
}