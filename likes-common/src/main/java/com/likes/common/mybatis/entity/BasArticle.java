package com.likes.common.mybatis.entity;

import java.io.Serializable;
import java.util.Date;

public class BasArticle implements Serializable {
    /**
     * 字段: bas_article.articleid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 图文id
     *
     * @mbggenerated
     */
    private Long articleid;

    /**
     * 字段: bas_article.accno<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 会员标识号
     *
     * @mbggenerated
     */
    private String accno;

    /**
     * 字段: bas_article.title<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 标题
     *
     * @mbggenerated
     */
    private String title;

    /**
     * 字段: bas_article.introduction<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 300<br/>
     * 说明: 简介
     *
     * @mbggenerated
     */
    private String introduction;

    /**
     * 字段: bas_article.arttype<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 图文类型 1 图文 2 短视频
     *
     * @mbggenerated
     */
    private Integer arttype;

    /**
     * 字段: bas_article.videoid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 300<br/>
     * 说明: 视频id
     *
     * @mbggenerated
     */
    private String videoid;

    /**
     * 字段: bas_article.picids<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1000<br/>
     * 说明: 图片id 多张图片id以 “,” 英文逗号区分
     *
     * @mbggenerated
     */
    private String picids;

    /**
     * 字段: bas_article.usertags<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 用户标签 多个标签以“,”分隔
     *
     * @mbggenerated
     */
    private String usertags;

    /**
     * 字段: bas_article.praisenum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 点赞量
     *
     * @mbggenerated
     */
    private Long praisenum;

    /**
     * 字段: bas_article.sharenum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 分享量
     *
     * @mbggenerated
     */
    private Long sharenum;

    /**
     * 字段: bas_article.viewnum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 收藏量
     *
     * @mbggenerated
     */
    private Long viewnum;

    /**
     * 字段: bas_article.seenum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 浏览数量
     *
     * @mbggenerated
     */
    private Long seenum;

    /**
     * 字段: bas_article.istophome<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 置顶 上首页 0置顶 9非置顶
     *
     * @mbggenerated
     */
    private Integer istophome;

    /**
     * 字段: bas_article.ishot<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 热门精华 热门 0是 9否
     *
     * @mbggenerated
     */
    private Integer ishot;

    /**
     * 字段: bas_article.sortby<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 排序权重
     *
     * @mbggenerated
     */
    private Integer sortby;

    /**
     * 字段: bas_article.checkstatus<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 审核状态 1未审核  8审核通过 9审核未通过
     *
     * @mbggenerated
     */
    private Integer checkstatus;

    /**
     * 字段: bas_article.checknote<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 400<br/>
     * 说明: 审核说明
     *
     * @mbggenerated
     */
    private String checknote;

    /**
     * 字段: bas_article.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    private Boolean isDelete;

    /**
     * 字段: bas_article.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    private String createUser;

    /**
     * 字段: bas_article.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    private Date createTime;

    /**
     * 字段: bas_article.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    private String updateUser;

    /**
     * 字段: bas_article.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    private Date updateTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_article
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return bas_article.articleid: 图文id
     *
     * @mbggenerated
     */
    public Long getArticleid() {
        return articleid;
    }

    /**
     * 字段: bas_article.articleid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 图文id
     *
     * @mbggenerated
     */
    public void setArticleid(Long articleid) {
        this.articleid = articleid;
    }

    /**
     * @return bas_article.accno: 会员标识号
     *
     * @mbggenerated
     */
    public String getAccno() {
        return accno;
    }

    /**
     * 字段: bas_article.accno<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 会员标识号
     *
     * @mbggenerated
     */
    public void setAccno(String accno) {
        this.accno = accno;
    }

    /**
     * @return bas_article.title: 标题
     *
     * @mbggenerated
     */
    public String getTitle() {
        return title;
    }

    /**
     * 字段: bas_article.title<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 标题
     *
     * @mbggenerated
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * @return bas_article.introduction: 简介
     *
     * @mbggenerated
     */
    public String getIntroduction() {
        return introduction;
    }

    /**
     * 字段: bas_article.introduction<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 300<br/>
     * 说明: 简介
     *
     * @mbggenerated
     */
    public void setIntroduction(String introduction) {
        this.introduction = introduction;
    }

    /**
     * @return bas_article.arttype: 图文类型 1 图文 2 短视频
     *
     * @mbggenerated
     */
    public Integer getArttype() {
        return arttype;
    }

    /**
     * 字段: bas_article.arttype<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 图文类型 1 图文 2 短视频
     *
     * @mbggenerated
     */
    public void setArttype(Integer arttype) {
        this.arttype = arttype;
    }

    /**
     * @return bas_article.videoid: 视频id
     *
     * @mbggenerated
     */
    public String getVideoid() {
        return videoid;
    }

    /**
     * 字段: bas_article.videoid<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 300<br/>
     * 说明: 视频id
     *
     * @mbggenerated
     */
    public void setVideoid(String videoid) {
        this.videoid = videoid;
    }

    /**
     * @return bas_article.picids: 图片id 多张图片id以 “,” 英文逗号区分
     *
     * @mbggenerated
     */
    public String getPicids() {
        return picids;
    }

    /**
     * 字段: bas_article.picids<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1000<br/>
     * 说明: 图片id 多张图片id以 “,” 英文逗号区分
     *
     * @mbggenerated
     */
    public void setPicids(String picids) {
        this.picids = picids;
    }

    /**
     * @return bas_article.usertags: 用户标签 多个标签以“,”分隔
     *
     * @mbggenerated
     */
    public String getUsertags() {
        return usertags;
    }

    /**
     * 字段: bas_article.usertags<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 100<br/>
     * 说明: 用户标签 多个标签以“,”分隔
     *
     * @mbggenerated
     */
    public void setUsertags(String usertags) {
        this.usertags = usertags;
    }

    /**
     * @return bas_article.praisenum: 点赞量
     *
     * @mbggenerated
     */
    public Long getPraisenum() {
        return praisenum;
    }

    /**
     * 字段: bas_article.praisenum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 点赞量
     *
     * @mbggenerated
     */
    public void setPraisenum(Long praisenum) {
        this.praisenum = praisenum;
    }

    /**
     * @return bas_article.sharenum: 分享量
     *
     * @mbggenerated
     */
    public Long getSharenum() {
        return sharenum;
    }

    /**
     * 字段: bas_article.sharenum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 分享量
     *
     * @mbggenerated
     */
    public void setSharenum(Long sharenum) {
        this.sharenum = sharenum;
    }

    /**
     * @return bas_article.viewnum: 收藏量
     *
     * @mbggenerated
     */
    public Long getViewnum() {
        return viewnum;
    }

    /**
     * 字段: bas_article.viewnum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 收藏量
     *
     * @mbggenerated
     */
    public void setViewnum(Long viewnum) {
        this.viewnum = viewnum;
    }

    /**
     * @return bas_article.seenum: 浏览数量
     *
     * @mbggenerated
     */
    public Long getSeenum() {
        return seenum;
    }

    /**
     * 字段: bas_article.seenum<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 浏览数量
     *
     * @mbggenerated
     */
    public void setSeenum(Long seenum) {
        this.seenum = seenum;
    }

    /**
     * @return bas_article.istophome: 置顶 上首页 0置顶 9非置顶
     *
     * @mbggenerated
     */
    public Integer getIstophome() {
        return istophome;
    }

    /**
     * 字段: bas_article.istophome<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 置顶 上首页 0置顶 9非置顶
     *
     * @mbggenerated
     */
    public void setIstophome(Integer istophome) {
        this.istophome = istophome;
    }

    /**
     * @return bas_article.ishot: 热门精华 热门 0是 9否
     *
     * @mbggenerated
     */
    public Integer getIshot() {
        return ishot;
    }

    /**
     * 字段: bas_article.ishot<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 热门精华 热门 0是 9否
     *
     * @mbggenerated
     */
    public void setIshot(Integer ishot) {
        this.ishot = ishot;
    }

    /**
     * @return bas_article.sortby: 排序权重
     *
     * @mbggenerated
     */
    public Integer getSortby() {
        return sortby;
    }

    /**
     * 字段: bas_article.sortby<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 排序权重
     *
     * @mbggenerated
     */
    public void setSortby(Integer sortby) {
        this.sortby = sortby;
    }

    /**
     * @return bas_article.checkstatus: 审核状态 1未审核  8审核通过 9审核未通过
     *
     * @mbggenerated
     */
    public Integer getCheckstatus() {
        return checkstatus;
    }

    /**
     * 字段: bas_article.checkstatus<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 1<br/>
     * 说明: 审核状态 1未审核  8审核通过 9审核未通过
     *
     * @mbggenerated
     */
    public void setCheckstatus(Integer checkstatus) {
        this.checkstatus = checkstatus;
    }

    /**
     * @return bas_article.checknote: 审核说明
     *
     * @mbggenerated
     */
    public String getChecknote() {
        return checknote;
    }

    /**
     * 字段: bas_article.checknote<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 400<br/>
     * 说明: 审核说明
     *
     * @mbggenerated
     */
    public void setChecknote(String checknote) {
        this.checknote = checknote;
    }

    /**
     * @return bas_article.is_delete: 是否删除
     *
     * @mbggenerated
     */
    public Boolean getIsDelete() {
        return isDelete;
    }

    /**
     * 字段: bas_article.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    public void setIsDelete(Boolean isDelete) {
        this.isDelete = isDelete;
    }

    /**
     * @return bas_article.create_user: 创建人
     *
     * @mbggenerated
     */
    public String getCreateUser() {
        return createUser;
    }

    /**
     * 字段: bas_article.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    /**
     * @return bas_article.create_time: 创建时间
     *
     * @mbggenerated
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 字段: bas_article.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * @return bas_article.update_user: 最后修改人
     *
     * @mbggenerated
     */
    public String getUpdateUser() {
        return updateUser;
    }

    /**
     * 字段: bas_article.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

    /**
     * @return bas_article.update_time: 更新时间
     *
     * @mbggenerated
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 字段: bas_article.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_article
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        BasArticle other = (BasArticle) that;
        return (this.getArticleid() == null ? other.getArticleid() == null : this.getArticleid().equals(other.getArticleid()))
            && (this.getAccno() == null ? other.getAccno() == null : this.getAccno().equals(other.getAccno()))
            && (this.getTitle() == null ? other.getTitle() == null : this.getTitle().equals(other.getTitle()))
            && (this.getIntroduction() == null ? other.getIntroduction() == null : this.getIntroduction().equals(other.getIntroduction()))
            && (this.getArttype() == null ? other.getArttype() == null : this.getArttype().equals(other.getArttype()))
            && (this.getVideoid() == null ? other.getVideoid() == null : this.getVideoid().equals(other.getVideoid()))
            && (this.getPicids() == null ? other.getPicids() == null : this.getPicids().equals(other.getPicids()))
            && (this.getUsertags() == null ? other.getUsertags() == null : this.getUsertags().equals(other.getUsertags()))
            && (this.getPraisenum() == null ? other.getPraisenum() == null : this.getPraisenum().equals(other.getPraisenum()))
            && (this.getSharenum() == null ? other.getSharenum() == null : this.getSharenum().equals(other.getSharenum()))
            && (this.getViewnum() == null ? other.getViewnum() == null : this.getViewnum().equals(other.getViewnum()))
            && (this.getSeenum() == null ? other.getSeenum() == null : this.getSeenum().equals(other.getSeenum()))
            && (this.getIstophome() == null ? other.getIstophome() == null : this.getIstophome().equals(other.getIstophome()))
            && (this.getIshot() == null ? other.getIshot() == null : this.getIshot().equals(other.getIshot()))
            && (this.getSortby() == null ? other.getSortby() == null : this.getSortby().equals(other.getSortby()))
            && (this.getCheckstatus() == null ? other.getCheckstatus() == null : this.getCheckstatus().equals(other.getCheckstatus()))
            && (this.getChecknote() == null ? other.getChecknote() == null : this.getChecknote().equals(other.getChecknote()))
            && (this.getIsDelete() == null ? other.getIsDelete() == null : this.getIsDelete().equals(other.getIsDelete()))
            && (this.getCreateUser() == null ? other.getCreateUser() == null : this.getCreateUser().equals(other.getCreateUser()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateUser() == null ? other.getUpdateUser() == null : this.getUpdateUser().equals(other.getUpdateUser()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_article
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getArticleid() == null) ? 0 : getArticleid().hashCode());
        result = prime * result + ((getAccno() == null) ? 0 : getAccno().hashCode());
        result = prime * result + ((getTitle() == null) ? 0 : getTitle().hashCode());
        result = prime * result + ((getIntroduction() == null) ? 0 : getIntroduction().hashCode());
        result = prime * result + ((getArttype() == null) ? 0 : getArttype().hashCode());
        result = prime * result + ((getVideoid() == null) ? 0 : getVideoid().hashCode());
        result = prime * result + ((getPicids() == null) ? 0 : getPicids().hashCode());
        result = prime * result + ((getUsertags() == null) ? 0 : getUsertags().hashCode());
        result = prime * result + ((getPraisenum() == null) ? 0 : getPraisenum().hashCode());
        result = prime * result + ((getSharenum() == null) ? 0 : getSharenum().hashCode());
        result = prime * result + ((getViewnum() == null) ? 0 : getViewnum().hashCode());
        result = prime * result + ((getSeenum() == null) ? 0 : getSeenum().hashCode());
        result = prime * result + ((getIstophome() == null) ? 0 : getIstophome().hashCode());
        result = prime * result + ((getIshot() == null) ? 0 : getIshot().hashCode());
        result = prime * result + ((getSortby() == null) ? 0 : getSortby().hashCode());
        result = prime * result + ((getCheckstatus() == null) ? 0 : getCheckstatus().hashCode());
        result = prime * result + ((getChecknote() == null) ? 0 : getChecknote().hashCode());
        result = prime * result + ((getIsDelete() == null) ? 0 : getIsDelete().hashCode());
        result = prime * result + ((getCreateUser() == null) ? 0 : getCreateUser().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateUser() == null) ? 0 : getUpdateUser().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_article
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", articleid=").append(articleid);
        sb.append(", accno=").append(accno);
        sb.append(", title=").append(title);
        sb.append(", introduction=").append(introduction);
        sb.append(", arttype=").append(arttype);
        sb.append(", videoid=").append(videoid);
        sb.append(", picids=").append(picids);
        sb.append(", usertags=").append(usertags);
        sb.append(", praisenum=").append(praisenum);
        sb.append(", sharenum=").append(sharenum);
        sb.append(", viewnum=").append(viewnum);
        sb.append(", seenum=").append(seenum);
        sb.append(", istophome=").append(istophome);
        sb.append(", ishot=").append(ishot);
        sb.append(", sortby=").append(sortby);
        sb.append(", checkstatus=").append(checkstatus);
        sb.append(", checknote=").append(checknote);
        sb.append(", isDelete=").append(isDelete);
        sb.append(", createUser=").append(createUser);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateUser=").append(updateUser);
        sb.append(", updateTime=").append(updateTime);
        sb.append("]");
        return sb.toString();
    }
}