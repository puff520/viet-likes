package com.likes.common.mybatis.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class AgTransferLog implements Serializable {
    /**
     * 字段: ag_transfer_log.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * 字段: ag_transfer_log.data_type<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 数据类型
     *
     * @mbggenerated
     */
    private String dataType;

    /**
     * 字段: ag_transfer_log.project_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 项目编号
     *
     * @mbggenerated
     */
    private String projectId;

    /**
     * 字段: ag_transfer_log.agent_code<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 代理商编号
     *
     * @mbggenerated
     */
    private String agentCode;

    /**
     * 字段: ag_transfer_log.transfer_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 转账编号
     *
     * @mbggenerated
     */
    private String transferId;

    /**
     * 字段: ag_transfer_log.trade_no<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 交易编号
     *
     * @mbggenerated
     */
    private String tradeNo;

    /**
     * 字段: ag_transfer_log.platform_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 平台编号(通常为空)
     *
     * @mbggenerated
     */
    private Integer platformId;

    /**
     * 字段: ag_transfer_log.platform_type<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 平台类型
     *
     * @mbggenerated
     */
    private String platformType;

    /**
     * 字段: ag_transfer_log.player_name<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 玩家账户
     *
     * @mbggenerated
     */
    private String playerName;

    /**
     * 字段: ag_transfer_log.transfer_type<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账类别
     *
     * @mbggenerated
     */
    private String transferType;

    /**
     * 字段: ag_transfer_log.transfer_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账额度 
当 transferType="DONATEFEE",类型
时。transferAmount 一定会是负值,不
页 18 / 53 Copyright©AsiaGaming
会为 0, 表示是支出的小费. 请参考”1. 
Xml 解析说明
     *
     * @mbggenerated
     */
    private BigDecimal transferAmount;

    /**
     * 字段: ag_transfer_log.previous_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账前额度
     *
     * @mbggenerated
     */
    private BigDecimal previousAmount;

    /**
     * 字段: ag_transfer_log.current_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 当前额度
     *
     * @mbggenerated
     */
    private BigDecimal currentAmount;

    /**
     * 字段: ag_transfer_log.currency<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 货币类型
     *
     * @mbggenerated
     */
    private String currency;

    /**
     * 字段: ag_transfer_log.exchange_rate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 汇率
     *
     * @mbggenerated
     */
    private String exchangeRate;

    /**
     * 字段: ag_transfer_log.ip<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 玩家 IP
     *
     * @mbggenerated
     */
    private String ip;

    /**
     * 字段: ag_transfer_log.flag<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账状态
     *
     * @mbggenerated
     */
    private Integer flag;

    /**
     * 字段: ag_transfer_log.creation_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 纪录时间
     *
     * @mbggenerated
     */
    private Date creationTime;

    /**
     * 字段: ag_transfer_log.game_code<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 游戏局号(通常为空)
     *
     * @mbggenerated
     */
    private String gameCode;

    /**
     * 字段: ag_transfer_log.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    private Date createTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ag_transfer_log
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return ag_transfer_log.id: 
     *
     * @mbggenerated
     */
    public Integer getId() {
        return id;
    }

    /**
     * 字段: ag_transfer_log.id<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 
     *
     * @mbggenerated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * @return ag_transfer_log.data_type: 数据类型
     *
     * @mbggenerated
     */
    public String getDataType() {
        return dataType;
    }

    /**
     * 字段: ag_transfer_log.data_type<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 数据类型
     *
     * @mbggenerated
     */
    public void setDataType(String dataType) {
        this.dataType = dataType;
    }

    /**
     * @return ag_transfer_log.project_id: 项目编号
     *
     * @mbggenerated
     */
    public String getProjectId() {
        return projectId;
    }

    /**
     * 字段: ag_transfer_log.project_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 项目编号
     *
     * @mbggenerated
     */
    public void setProjectId(String projectId) {
        this.projectId = projectId;
    }

    /**
     * @return ag_transfer_log.agent_code: 代理商编号
     *
     * @mbggenerated
     */
    public String getAgentCode() {
        return agentCode;
    }

    /**
     * 字段: ag_transfer_log.agent_code<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 代理商编号
     *
     * @mbggenerated
     */
    public void setAgentCode(String agentCode) {
        this.agentCode = agentCode;
    }

    /**
     * @return ag_transfer_log.transfer_id: 转账编号
     *
     * @mbggenerated
     */
    public String getTransferId() {
        return transferId;
    }

    /**
     * 字段: ag_transfer_log.transfer_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 转账编号
     *
     * @mbggenerated
     */
    public void setTransferId(String transferId) {
        this.transferId = transferId;
    }

    /**
     * @return ag_transfer_log.trade_no: 交易编号
     *
     * @mbggenerated
     */
    public String getTradeNo() {
        return tradeNo;
    }

    /**
     * 字段: ag_transfer_log.trade_no<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 交易编号
     *
     * @mbggenerated
     */
    public void setTradeNo(String tradeNo) {
        this.tradeNo = tradeNo;
    }

    /**
     * @return ag_transfer_log.platform_id: 平台编号(通常为空)
     *
     * @mbggenerated
     */
    public Integer getPlatformId() {
        return platformId;
    }

    /**
     * 字段: ag_transfer_log.platform_id<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 平台编号(通常为空)
     *
     * @mbggenerated
     */
    public void setPlatformId(Integer platformId) {
        this.platformId = platformId;
    }

    /**
     * @return ag_transfer_log.platform_type: 平台类型
     *
     * @mbggenerated
     */
    public String getPlatformType() {
        return platformType;
    }

    /**
     * 字段: ag_transfer_log.platform_type<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 平台类型
     *
     * @mbggenerated
     */
    public void setPlatformType(String platformType) {
        this.platformType = platformType;
    }

    /**
     * @return ag_transfer_log.player_name: 玩家账户
     *
     * @mbggenerated
     */
    public String getPlayerName() {
        return playerName;
    }

    /**
     * 字段: ag_transfer_log.player_name<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 玩家账户
     *
     * @mbggenerated
     */
    public void setPlayerName(String playerName) {
        this.playerName = playerName;
    }

    /**
     * @return ag_transfer_log.transfer_type: 转账类别
     *
     * @mbggenerated
     */
    public String getTransferType() {
        return transferType;
    }

    /**
     * 字段: ag_transfer_log.transfer_type<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账类别
     *
     * @mbggenerated
     */
    public void setTransferType(String transferType) {
        this.transferType = transferType;
    }

    /**
     * @return ag_transfer_log.transfer_amount: 转账额度 
当 transferType="DONATEFEE",类型
时。transferAmount 一定会是负值,不
页 18 / 53 Copyright©AsiaGaming
会为 0, 表示是支出的小费. 请参考”1. 
Xml 解析说明
     *
     * @mbggenerated
     */
    public BigDecimal getTransferAmount() {
        return transferAmount;
    }

    /**
     * 字段: ag_transfer_log.transfer_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账额度 
当 transferType="DONATEFEE",类型
时。transferAmount 一定会是负值,不
页 18 / 53 Copyright©AsiaGaming
会为 0, 表示是支出的小费. 请参考”1. 
Xml 解析说明
     *
     * @mbggenerated
     */
    public void setTransferAmount(BigDecimal transferAmount) {
        this.transferAmount = transferAmount;
    }

    /**
     * @return ag_transfer_log.previous_amount: 转账前额度
     *
     * @mbggenerated
     */
    public BigDecimal getPreviousAmount() {
        return previousAmount;
    }

    /**
     * 字段: ag_transfer_log.previous_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账前额度
     *
     * @mbggenerated
     */
    public void setPreviousAmount(BigDecimal previousAmount) {
        this.previousAmount = previousAmount;
    }

    /**
     * @return ag_transfer_log.current_amount: 当前额度
     *
     * @mbggenerated
     */
    public BigDecimal getCurrentAmount() {
        return currentAmount;
    }

    /**
     * 字段: ag_transfer_log.current_amount<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 当前额度
     *
     * @mbggenerated
     */
    public void setCurrentAmount(BigDecimal currentAmount) {
        this.currentAmount = currentAmount;
    }

    /**
     * @return ag_transfer_log.currency: 货币类型
     *
     * @mbggenerated
     */
    public String getCurrency() {
        return currency;
    }

    /**
     * 字段: ag_transfer_log.currency<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 货币类型
     *
     * @mbggenerated
     */
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * @return ag_transfer_log.exchange_rate: 汇率
     *
     * @mbggenerated
     */
    public String getExchangeRate() {
        return exchangeRate;
    }

    /**
     * 字段: ag_transfer_log.exchange_rate<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 汇率
     *
     * @mbggenerated
     */
    public void setExchangeRate(String exchangeRate) {
        this.exchangeRate = exchangeRate;
    }

    /**
     * @return ag_transfer_log.ip: 玩家 IP
     *
     * @mbggenerated
     */
    public String getIp() {
        return ip;
    }

    /**
     * 字段: ag_transfer_log.ip<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 玩家 IP
     *
     * @mbggenerated
     */
    public void setIp(String ip) {
        this.ip = ip;
    }

    /**
     * @return ag_transfer_log.flag: 转账状态
     *
     * @mbggenerated
     */
    public Integer getFlag() {
        return flag;
    }

    /**
     * 字段: ag_transfer_log.flag<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 10<br/>
     * 说明: 转账状态
     *
     * @mbggenerated
     */
    public void setFlag(Integer flag) {
        this.flag = flag;
    }

    /**
     * @return ag_transfer_log.creation_time: 纪录时间
     *
     * @mbggenerated
     */
    public Date getCreationTime() {
        return creationTime;
    }

    /**
     * 字段: ag_transfer_log.creation_time<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 纪录时间
     *
     * @mbggenerated
     */
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }

    /**
     * @return ag_transfer_log.game_code: 游戏局号(通常为空)
     *
     * @mbggenerated
     */
    public String getGameCode() {
        return gameCode;
    }

    /**
     * 字段: ag_transfer_log.game_code<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 50<br/>
     * 说明: 游戏局号(通常为空)
     *
     * @mbggenerated
     */
    public void setGameCode(String gameCode) {
        this.gameCode = gameCode;
    }

    /**
     * @return ag_transfer_log.create_time: 创建时间
     *
     * @mbggenerated
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 字段: ag_transfer_log.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ag_transfer_log
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        AgTransferLog other = (AgTransferLog) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getDataType() == null ? other.getDataType() == null : this.getDataType().equals(other.getDataType()))
            && (this.getProjectId() == null ? other.getProjectId() == null : this.getProjectId().equals(other.getProjectId()))
            && (this.getAgentCode() == null ? other.getAgentCode() == null : this.getAgentCode().equals(other.getAgentCode()))
            && (this.getTransferId() == null ? other.getTransferId() == null : this.getTransferId().equals(other.getTransferId()))
            && (this.getTradeNo() == null ? other.getTradeNo() == null : this.getTradeNo().equals(other.getTradeNo()))
            && (this.getPlatformId() == null ? other.getPlatformId() == null : this.getPlatformId().equals(other.getPlatformId()))
            && (this.getPlatformType() == null ? other.getPlatformType() == null : this.getPlatformType().equals(other.getPlatformType()))
            && (this.getPlayerName() == null ? other.getPlayerName() == null : this.getPlayerName().equals(other.getPlayerName()))
            && (this.getTransferType() == null ? other.getTransferType() == null : this.getTransferType().equals(other.getTransferType()))
            && (this.getTransferAmount() == null ? other.getTransferAmount() == null : this.getTransferAmount().equals(other.getTransferAmount()))
            && (this.getPreviousAmount() == null ? other.getPreviousAmount() == null : this.getPreviousAmount().equals(other.getPreviousAmount()))
            && (this.getCurrentAmount() == null ? other.getCurrentAmount() == null : this.getCurrentAmount().equals(other.getCurrentAmount()))
            && (this.getCurrency() == null ? other.getCurrency() == null : this.getCurrency().equals(other.getCurrency()))
            && (this.getExchangeRate() == null ? other.getExchangeRate() == null : this.getExchangeRate().equals(other.getExchangeRate()))
            && (this.getIp() == null ? other.getIp() == null : this.getIp().equals(other.getIp()))
            && (this.getFlag() == null ? other.getFlag() == null : this.getFlag().equals(other.getFlag()))
            && (this.getCreationTime() == null ? other.getCreationTime() == null : this.getCreationTime().equals(other.getCreationTime()))
            && (this.getGameCode() == null ? other.getGameCode() == null : this.getGameCode().equals(other.getGameCode()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ag_transfer_log
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getDataType() == null) ? 0 : getDataType().hashCode());
        result = prime * result + ((getProjectId() == null) ? 0 : getProjectId().hashCode());
        result = prime * result + ((getAgentCode() == null) ? 0 : getAgentCode().hashCode());
        result = prime * result + ((getTransferId() == null) ? 0 : getTransferId().hashCode());
        result = prime * result + ((getTradeNo() == null) ? 0 : getTradeNo().hashCode());
        result = prime * result + ((getPlatformId() == null) ? 0 : getPlatformId().hashCode());
        result = prime * result + ((getPlatformType() == null) ? 0 : getPlatformType().hashCode());
        result = prime * result + ((getPlayerName() == null) ? 0 : getPlayerName().hashCode());
        result = prime * result + ((getTransferType() == null) ? 0 : getTransferType().hashCode());
        result = prime * result + ((getTransferAmount() == null) ? 0 : getTransferAmount().hashCode());
        result = prime * result + ((getPreviousAmount() == null) ? 0 : getPreviousAmount().hashCode());
        result = prime * result + ((getCurrentAmount() == null) ? 0 : getCurrentAmount().hashCode());
        result = prime * result + ((getCurrency() == null) ? 0 : getCurrency().hashCode());
        result = prime * result + ((getExchangeRate() == null) ? 0 : getExchangeRate().hashCode());
        result = prime * result + ((getIp() == null) ? 0 : getIp().hashCode());
        result = prime * result + ((getFlag() == null) ? 0 : getFlag().hashCode());
        result = prime * result + ((getCreationTime() == null) ? 0 : getCreationTime().hashCode());
        result = prime * result + ((getGameCode() == null) ? 0 : getGameCode().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ag_transfer_log
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", dataType=").append(dataType);
        sb.append(", projectId=").append(projectId);
        sb.append(", agentCode=").append(agentCode);
        sb.append(", transferId=").append(transferId);
        sb.append(", tradeNo=").append(tradeNo);
        sb.append(", platformId=").append(platformId);
        sb.append(", platformType=").append(platformType);
        sb.append(", playerName=").append(playerName);
        sb.append(", transferType=").append(transferType);
        sb.append(", transferAmount=").append(transferAmount);
        sb.append(", previousAmount=").append(previousAmount);
        sb.append(", currentAmount=").append(currentAmount);
        sb.append(", currency=").append(currency);
        sb.append(", exchangeRate=").append(exchangeRate);
        sb.append(", ip=").append(ip);
        sb.append(", flag=").append(flag);
        sb.append(", creationTime=").append(creationTime);
        sb.append(", gameCode=").append(gameCode);
        sb.append(", createTime=").append(createTime);
        sb.append("]");
        return sb.toString();
    }
}