package com.likes.common.mybatis.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

public class ExpFundstatement implements Serializable {
    /**
     * 字段: exp_fundstatement.fundid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 资金报表id
     *
     * @mbggenerated
     */
    private Long fundid;

    /**
     * 字段: exp_fundstatement.rechargeamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 充值总金额
     *
     * @mbggenerated
     */
    private BigDecimal rechargeamt;

    /**
     * 字段: exp_fundstatement.firstrecharge<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 首充人数
     *
     * @mbggenerated
     */
    private Long firstrecharge;

    /**
     * 字段: exp_fundstatement.lotamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 彩票总投注金额
     *
     * @mbggenerated
     */
    private BigDecimal lotamt;

    /**
     * 字段: exp_fundstatement.lotawardamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 彩票总中奖金额
     *
     * @mbggenerated
     */
    private BigDecimal lotawardamt;

    /**
     * 字段: exp_fundstatement.gameamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 游戏总投注金额
     *
     * @mbggenerated
     */
    private BigDecimal gameamt;

    /**
     * 字段: exp_fundstatement.gameawardamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 游戏总中奖金额
     *
     * @mbggenerated
     */
    private BigDecimal gameawardamt;

    /**
     * 字段: exp_fundstatement.giftamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 直播盈利
     *
     * @mbggenerated
     */
    private BigDecimal giftamt;

    /**
     * 字段: exp_fundstatement.giftsumamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 直播总收入
     *
     * @mbggenerated
     */
    private BigDecimal giftsumamt;

    /**
     * 字段: exp_fundstatement.profitamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 站点总盈利(彩票+棋牌+礼物分成)
     *
     * @mbggenerated
     */
    private BigDecimal profitamt;

    /**
     * 字段: exp_fundstatement.platformamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 平台总抽成
     *
     * @mbggenerated
     */
    private BigDecimal platformamt;

    /**
     * 字段: exp_fundstatement.operateamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 站点维护费
     *
     * @mbggenerated
     */
    private BigDecimal operateamt;

    /**
     * 字段: exp_fundstatement.payamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 应缴平台账款
     *
     * @mbggenerated
     */
    private BigDecimal payamt;

    /**
     * 字段: exp_fundstatement.paymentamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 出款总额
     *
     * @mbggenerated
     */
    private BigDecimal paymentamt;

    /**
     * 字段: exp_fundstatement.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    private Boolean isDelete;

    /**
     * 字段: exp_fundstatement.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    private String createUser;

    /**
     * 字段: exp_fundstatement.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    private Date createTime;

    /**
     * 字段: exp_fundstatement.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    private String updateUser;

    /**
     * 字段: exp_fundstatement.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    private Date updateTime;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exp_fundstatement
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * @return exp_fundstatement.fundid: 资金报表id
     *
     * @mbggenerated
     */
    public Long getFundid() {
        return fundid;
    }

    /**
     * 字段: exp_fundstatement.fundid<br/>
     * 主键: 自动增长<br/>
     * 必填: true<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 资金报表id
     *
     * @mbggenerated
     */
    public void setFundid(Long fundid) {
        this.fundid = fundid;
    }

    /**
     * @return exp_fundstatement.rechargeamt: 充值总金额
     *
     * @mbggenerated
     */
    public BigDecimal getRechargeamt() {
        return rechargeamt;
    }

    /**
     * 字段: exp_fundstatement.rechargeamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 充值总金额
     *
     * @mbggenerated
     */
    public void setRechargeamt(BigDecimal rechargeamt) {
        this.rechargeamt = rechargeamt;
    }

    /**
     * @return exp_fundstatement.firstrecharge: 首充人数
     *
     * @mbggenerated
     */
    public Long getFirstrecharge() {
        return firstrecharge;
    }

    /**
     * 字段: exp_fundstatement.firstrecharge<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 19<br/>
     * 说明: 首充人数
     *
     * @mbggenerated
     */
    public void setFirstrecharge(Long firstrecharge) {
        this.firstrecharge = firstrecharge;
    }

    /**
     * @return exp_fundstatement.lotamt: 彩票总投注金额
     *
     * @mbggenerated
     */
    public BigDecimal getLotamt() {
        return lotamt;
    }

    /**
     * 字段: exp_fundstatement.lotamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 彩票总投注金额
     *
     * @mbggenerated
     */
    public void setLotamt(BigDecimal lotamt) {
        this.lotamt = lotamt;
    }

    /**
     * @return exp_fundstatement.lotawardamt: 彩票总中奖金额
     *
     * @mbggenerated
     */
    public BigDecimal getLotawardamt() {
        return lotawardamt;
    }

    /**
     * 字段: exp_fundstatement.lotawardamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 彩票总中奖金额
     *
     * @mbggenerated
     */
    public void setLotawardamt(BigDecimal lotawardamt) {
        this.lotawardamt = lotawardamt;
    }

    /**
     * @return exp_fundstatement.gameamt: 游戏总投注金额
     *
     * @mbggenerated
     */
    public BigDecimal getGameamt() {
        return gameamt;
    }

    /**
     * 字段: exp_fundstatement.gameamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 游戏总投注金额
     *
     * @mbggenerated
     */
    public void setGameamt(BigDecimal gameamt) {
        this.gameamt = gameamt;
    }

    /**
     * @return exp_fundstatement.gameawardamt: 游戏总中奖金额
     *
     * @mbggenerated
     */
    public BigDecimal getGameawardamt() {
        return gameawardamt;
    }

    /**
     * 字段: exp_fundstatement.gameawardamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 游戏总中奖金额
     *
     * @mbggenerated
     */
    public void setGameawardamt(BigDecimal gameawardamt) {
        this.gameawardamt = gameawardamt;
    }

    /**
     * @return exp_fundstatement.giftamt: 直播盈利
     *
     * @mbggenerated
     */
    public BigDecimal getGiftamt() {
        return giftamt;
    }

    /**
     * 字段: exp_fundstatement.giftamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 直播盈利
     *
     * @mbggenerated
     */
    public void setGiftamt(BigDecimal giftamt) {
        this.giftamt = giftamt;
    }

    /**
     * @return exp_fundstatement.giftsumamt: 直播总收入
     *
     * @mbggenerated
     */
    public BigDecimal getGiftsumamt() {
        return giftsumamt;
    }

    /**
     * 字段: exp_fundstatement.giftsumamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 直播总收入
     *
     * @mbggenerated
     */
    public void setGiftsumamt(BigDecimal giftsumamt) {
        this.giftsumamt = giftsumamt;
    }

    /**
     * @return exp_fundstatement.profitamt: 站点总盈利(彩票+棋牌+礼物分成)
     *
     * @mbggenerated
     */
    public BigDecimal getProfitamt() {
        return profitamt;
    }

    /**
     * 字段: exp_fundstatement.profitamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 站点总盈利(彩票+棋牌+礼物分成)
     *
     * @mbggenerated
     */
    public void setProfitamt(BigDecimal profitamt) {
        this.profitamt = profitamt;
    }

    /**
     * @return exp_fundstatement.platformamt: 平台总抽成
     *
     * @mbggenerated
     */
    public BigDecimal getPlatformamt() {
        return platformamt;
    }

    /**
     * 字段: exp_fundstatement.platformamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 平台总抽成
     *
     * @mbggenerated
     */
    public void setPlatformamt(BigDecimal platformamt) {
        this.platformamt = platformamt;
    }

    /**
     * @return exp_fundstatement.operateamt: 站点维护费
     *
     * @mbggenerated
     */
    public BigDecimal getOperateamt() {
        return operateamt;
    }

    /**
     * 字段: exp_fundstatement.operateamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 站点维护费
     *
     * @mbggenerated
     */
    public void setOperateamt(BigDecimal operateamt) {
        this.operateamt = operateamt;
    }

    /**
     * @return exp_fundstatement.payamt: 应缴平台账款
     *
     * @mbggenerated
     */
    public BigDecimal getPayamt() {
        return payamt;
    }

    /**
     * 字段: exp_fundstatement.payamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 应缴平台账款
     *
     * @mbggenerated
     */
    public void setPayamt(BigDecimal payamt) {
        this.payamt = payamt;
    }

    /**
     * @return exp_fundstatement.paymentamt: 出款总额
     *
     * @mbggenerated
     */
    public BigDecimal getPaymentamt() {
        return paymentamt;
    }

    /**
     * 字段: exp_fundstatement.paymentamt<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 16<br/>
     * 说明: 出款总额
     *
     * @mbggenerated
     */
    public void setPaymentamt(BigDecimal paymentamt) {
        this.paymentamt = paymentamt;
    }

    /**
     * @return exp_fundstatement.is_delete: 是否删除
     *
     * @mbggenerated
     */
    public Boolean getIsDelete() {
        return isDelete;
    }

    /**
     * 字段: exp_fundstatement.is_delete<br/>
     * 必填: true<br/>
     * 缺省: b'0'<br/>
     * 长度: 1<br/>
     * 说明: 是否删除
     *
     * @mbggenerated
     */
    public void setIsDelete(Boolean isDelete) {
        this.isDelete = isDelete;
    }

    /**
     * @return exp_fundstatement.create_user: 创建人
     *
     * @mbggenerated
     */
    public String getCreateUser() {
        return createUser;
    }

    /**
     * 字段: exp_fundstatement.create_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 创建人
     *
     * @mbggenerated
     */
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    /**
     * @return exp_fundstatement.create_time: 创建时间
     *
     * @mbggenerated
     */
    public Date getCreateTime() {
        return createTime;
    }

    /**
     * 字段: exp_fundstatement.create_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 创建时间
     *
     * @mbggenerated
     */
    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    /**
     * @return exp_fundstatement.update_user: 最后修改人
     *
     * @mbggenerated
     */
    public String getUpdateUser() {
        return updateUser;
    }

    /**
     * 字段: exp_fundstatement.update_user<br/>
     * 必填: false<br/>
     * 缺省: <br/>
     * 长度: 32<br/>
     * 说明: 最后修改人
     *
     * @mbggenerated
     */
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

    /**
     * @return exp_fundstatement.update_time: 更新时间
     *
     * @mbggenerated
     */
    public Date getUpdateTime() {
        return updateTime;
    }

    /**
     * 字段: exp_fundstatement.update_time<br/>
     * 必填: true<br/>
     * 缺省: CURRENT_TIMESTAMP<br/>
     * 长度: 19<br/>
     * 说明: 更新时间
     *
     * @mbggenerated
     */
    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exp_fundstatement
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        ExpFundstatement other = (ExpFundstatement) that;
        return (this.getFundid() == null ? other.getFundid() == null : this.getFundid().equals(other.getFundid()))
            && (this.getRechargeamt() == null ? other.getRechargeamt() == null : this.getRechargeamt().equals(other.getRechargeamt()))
            && (this.getFirstrecharge() == null ? other.getFirstrecharge() == null : this.getFirstrecharge().equals(other.getFirstrecharge()))
            && (this.getLotamt() == null ? other.getLotamt() == null : this.getLotamt().equals(other.getLotamt()))
            && (this.getLotawardamt() == null ? other.getLotawardamt() == null : this.getLotawardamt().equals(other.getLotawardamt()))
            && (this.getGameamt() == null ? other.getGameamt() == null : this.getGameamt().equals(other.getGameamt()))
            && (this.getGameawardamt() == null ? other.getGameawardamt() == null : this.getGameawardamt().equals(other.getGameawardamt()))
            && (this.getGiftamt() == null ? other.getGiftamt() == null : this.getGiftamt().equals(other.getGiftamt()))
            && (this.getGiftsumamt() == null ? other.getGiftsumamt() == null : this.getGiftsumamt().equals(other.getGiftsumamt()))
            && (this.getProfitamt() == null ? other.getProfitamt() == null : this.getProfitamt().equals(other.getProfitamt()))
            && (this.getPlatformamt() == null ? other.getPlatformamt() == null : this.getPlatformamt().equals(other.getPlatformamt()))
            && (this.getOperateamt() == null ? other.getOperateamt() == null : this.getOperateamt().equals(other.getOperateamt()))
            && (this.getPayamt() == null ? other.getPayamt() == null : this.getPayamt().equals(other.getPayamt()))
            && (this.getPaymentamt() == null ? other.getPaymentamt() == null : this.getPaymentamt().equals(other.getPaymentamt()))
            && (this.getIsDelete() == null ? other.getIsDelete() == null : this.getIsDelete().equals(other.getIsDelete()))
            && (this.getCreateUser() == null ? other.getCreateUser() == null : this.getCreateUser().equals(other.getCreateUser()))
            && (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))
            && (this.getUpdateUser() == null ? other.getUpdateUser() == null : this.getUpdateUser().equals(other.getUpdateUser()))
            && (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exp_fundstatement
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getFundid() == null) ? 0 : getFundid().hashCode());
        result = prime * result + ((getRechargeamt() == null) ? 0 : getRechargeamt().hashCode());
        result = prime * result + ((getFirstrecharge() == null) ? 0 : getFirstrecharge().hashCode());
        result = prime * result + ((getLotamt() == null) ? 0 : getLotamt().hashCode());
        result = prime * result + ((getLotawardamt() == null) ? 0 : getLotawardamt().hashCode());
        result = prime * result + ((getGameamt() == null) ? 0 : getGameamt().hashCode());
        result = prime * result + ((getGameawardamt() == null) ? 0 : getGameawardamt().hashCode());
        result = prime * result + ((getGiftamt() == null) ? 0 : getGiftamt().hashCode());
        result = prime * result + ((getGiftsumamt() == null) ? 0 : getGiftsumamt().hashCode());
        result = prime * result + ((getProfitamt() == null) ? 0 : getProfitamt().hashCode());
        result = prime * result + ((getPlatformamt() == null) ? 0 : getPlatformamt().hashCode());
        result = prime * result + ((getOperateamt() == null) ? 0 : getOperateamt().hashCode());
        result = prime * result + ((getPayamt() == null) ? 0 : getPayamt().hashCode());
        result = prime * result + ((getPaymentamt() == null) ? 0 : getPaymentamt().hashCode());
        result = prime * result + ((getIsDelete() == null) ? 0 : getIsDelete().hashCode());
        result = prime * result + ((getCreateUser() == null) ? 0 : getCreateUser().hashCode());
        result = prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());
        result = prime * result + ((getUpdateUser() == null) ? 0 : getUpdateUser().hashCode());
        result = prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exp_fundstatement
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", fundid=").append(fundid);
        sb.append(", rechargeamt=").append(rechargeamt);
        sb.append(", firstrecharge=").append(firstrecharge);
        sb.append(", lotamt=").append(lotamt);
        sb.append(", lotawardamt=").append(lotawardamt);
        sb.append(", gameamt=").append(gameamt);
        sb.append(", gameawardamt=").append(gameawardamt);
        sb.append(", giftamt=").append(giftamt);
        sb.append(", giftsumamt=").append(giftsumamt);
        sb.append(", profitamt=").append(profitamt);
        sb.append(", platformamt=").append(platformamt);
        sb.append(", operateamt=").append(operateamt);
        sb.append(", payamt=").append(payamt);
        sb.append(", paymentamt=").append(paymentamt);
        sb.append(", isDelete=").append(isDelete);
        sb.append(", createUser=").append(createUser);
        sb.append(", createTime=").append(createTime);
        sb.append(", updateUser=").append(updateUser);
        sb.append(", updateTime=").append(updateTime);
        sb.append("]");
        return sb.toString();
    }
}