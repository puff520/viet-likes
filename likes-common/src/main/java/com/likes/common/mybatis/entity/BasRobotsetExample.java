package com.likes.common.mybatis.entity;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BasRobotsetExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    protected Integer limit;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public BasRobotsetExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        offset = null;
        limit = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public Integer getLimit() {
        return this.limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public BasRobotsetExample bound(Integer offset, Integer limit) {
        this.offset = offset;
        this.limit = limit;
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria implements Serializable {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRobotSetidIsNull() {
            addCriterion("robot_setid is null");
            return (Criteria) this;
        }

        public Criteria andRobotSetidIsNotNull() {
            addCriterion("robot_setid is not null");
            return (Criteria) this;
        }

        public Criteria andRobotSetidEqualTo(Long value) {
            addCriterion("robot_setid =", value, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidNotEqualTo(Long value) {
            addCriterion("robot_setid <>", value, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidGreaterThan(Long value) {
            addCriterion("robot_setid >", value, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidGreaterThanOrEqualTo(Long value) {
            addCriterion("robot_setid >=", value, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidLessThan(Long value) {
            addCriterion("robot_setid <", value, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidLessThanOrEqualTo(Long value) {
            addCriterion("robot_setid <=", value, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidIn(List<Long> values) {
            addCriterion("robot_setid in", values, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidNotIn(List<Long> values) {
            addCriterion("robot_setid not in", values, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidBetween(Long value1, Long value2) {
            addCriterion("robot_setid between", value1, value2, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotSetidNotBetween(Long value1, Long value2) {
            addCriterion("robot_setid not between", value1, value2, "robotSetid");
            return (Criteria) this;
        }

        public Criteria andRobotNumsIsNull() {
            addCriterion("robot_nums is null");
            return (Criteria) this;
        }

        public Criteria andRobotNumsIsNotNull() {
            addCriterion("robot_nums is not null");
            return (Criteria) this;
        }

        public Criteria andRobotNumsEqualTo(Long value) {
            addCriterion("robot_nums =", value, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsNotEqualTo(Long value) {
            addCriterion("robot_nums <>", value, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsGreaterThan(Long value) {
            addCriterion("robot_nums >", value, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsGreaterThanOrEqualTo(Long value) {
            addCriterion("robot_nums >=", value, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsLessThan(Long value) {
            addCriterion("robot_nums <", value, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsLessThanOrEqualTo(Long value) {
            addCriterion("robot_nums <=", value, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsIn(List<Long> values) {
            addCriterion("robot_nums in", values, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsNotIn(List<Long> values) {
            addCriterion("robot_nums not in", values, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsBetween(Long value1, Long value2) {
            addCriterion("robot_nums between", value1, value2, "robotNums");
            return (Criteria) this;
        }

        public Criteria andRobotNumsNotBetween(Long value1, Long value2) {
            addCriterion("robot_nums not between", value1, value2, "robotNums");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyIsNull() {
            addCriterion("gift_bet_frequency is null");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyIsNotNull() {
            addCriterion("gift_bet_frequency is not null");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyEqualTo(Long value) {
            addCriterion("gift_bet_frequency =", value, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyNotEqualTo(Long value) {
            addCriterion("gift_bet_frequency <>", value, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyGreaterThan(Long value) {
            addCriterion("gift_bet_frequency >", value, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyGreaterThanOrEqualTo(Long value) {
            addCriterion("gift_bet_frequency >=", value, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyLessThan(Long value) {
            addCriterion("gift_bet_frequency <", value, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyLessThanOrEqualTo(Long value) {
            addCriterion("gift_bet_frequency <=", value, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyIn(List<Long> values) {
            addCriterion("gift_bet_frequency in", values, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyNotIn(List<Long> values) {
            addCriterion("gift_bet_frequency not in", values, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyBetween(Long value1, Long value2) {
            addCriterion("gift_bet_frequency between", value1, value2, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andGiftBetFrequencyNotBetween(Long value1, Long value2) {
            addCriterion("gift_bet_frequency not between", value1, value2, "giftBetFrequency");
            return (Criteria) this;
        }

        public Criteria andStayTimeIsNull() {
            addCriterion("stay_time is null");
            return (Criteria) this;
        }

        public Criteria andStayTimeIsNotNull() {
            addCriterion("stay_time is not null");
            return (Criteria) this;
        }

        public Criteria andStayTimeEqualTo(Long value) {
            addCriterion("stay_time =", value, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeNotEqualTo(Long value) {
            addCriterion("stay_time <>", value, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeGreaterThan(Long value) {
            addCriterion("stay_time >", value, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("stay_time >=", value, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeLessThan(Long value) {
            addCriterion("stay_time <", value, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeLessThanOrEqualTo(Long value) {
            addCriterion("stay_time <=", value, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeIn(List<Long> values) {
            addCriterion("stay_time in", values, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeNotIn(List<Long> values) {
            addCriterion("stay_time not in", values, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeBetween(Long value1, Long value2) {
            addCriterion("stay_time between", value1, value2, "stayTime");
            return (Criteria) this;
        }

        public Criteria andStayTimeNotBetween(Long value1, Long value2) {
            addCriterion("stay_time not between", value1, value2, "stayTime");
            return (Criteria) this;
        }

        public Criteria andGiftStatusIsNull() {
            addCriterion("gift_status is null");
            return (Criteria) this;
        }

        public Criteria andGiftStatusIsNotNull() {
            addCriterion("gift_status is not null");
            return (Criteria) this;
        }

        public Criteria andGiftStatusEqualTo(Integer value) {
            addCriterion("gift_status =", value, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusNotEqualTo(Integer value) {
            addCriterion("gift_status <>", value, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusGreaterThan(Integer value) {
            addCriterion("gift_status >", value, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("gift_status >=", value, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusLessThan(Integer value) {
            addCriterion("gift_status <", value, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusLessThanOrEqualTo(Integer value) {
            addCriterion("gift_status <=", value, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusIn(List<Integer> values) {
            addCriterion("gift_status in", values, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusNotIn(List<Integer> values) {
            addCriterion("gift_status not in", values, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusBetween(Integer value1, Integer value2) {
            addCriterion("gift_status between", value1, value2, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andGiftStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("gift_status not between", value1, value2, "giftStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusIsNull() {
            addCriterion("bet_status is null");
            return (Criteria) this;
        }

        public Criteria andBetStatusIsNotNull() {
            addCriterion("bet_status is not null");
            return (Criteria) this;
        }

        public Criteria andBetStatusEqualTo(Integer value) {
            addCriterion("bet_status =", value, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusNotEqualTo(Integer value) {
            addCriterion("bet_status <>", value, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusGreaterThan(Integer value) {
            addCriterion("bet_status >", value, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("bet_status >=", value, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusLessThan(Integer value) {
            addCriterion("bet_status <", value, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusLessThanOrEqualTo(Integer value) {
            addCriterion("bet_status <=", value, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusIn(List<Integer> values) {
            addCriterion("bet_status in", values, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusNotIn(List<Integer> values) {
            addCriterion("bet_status not in", values, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusBetween(Integer value1, Integer value2) {
            addCriterion("bet_status between", value1, value2, "betStatus");
            return (Criteria) this;
        }

        public Criteria andBetStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("bet_status not between", value1, value2, "betStatus");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Boolean value) {
            addCriterion("is_delete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Boolean value) {
            addCriterion("is_delete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Boolean value) {
            addCriterion("is_delete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_delete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Boolean value) {
            addCriterion("is_delete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("is_delete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Boolean> values) {
            addCriterion("is_delete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Boolean> values) {
            addCriterion("is_delete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("create_user is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("create_user is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("create_user =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("create_user <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("create_user >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("create_user >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("create_user <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("create_user <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("create_user like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("create_user not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("create_user in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("create_user not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("create_user between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("create_user not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNull() {
            addCriterion("update_user is null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIsNotNull() {
            addCriterion("update_user is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateUserEqualTo(String value) {
            addCriterion("update_user =", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotEqualTo(String value) {
            addCriterion("update_user <>", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThan(String value) {
            addCriterion("update_user >", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserGreaterThanOrEqualTo(String value) {
            addCriterion("update_user >=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThan(String value) {
            addCriterion("update_user <", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLessThanOrEqualTo(String value) {
            addCriterion("update_user <=", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserLike(String value) {
            addCriterion("update_user like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotLike(String value) {
            addCriterion("update_user not like", value, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserIn(List<String> values) {
            addCriterion("update_user in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotIn(List<String> values) {
            addCriterion("update_user not in", values, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserBetween(String value1, String value2) {
            addCriterion("update_user between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateUserNotBetween(String value1, String value2) {
            addCriterion("update_user not between", value1, value2, "updateUser");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_robotset
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_robotset
     *
     * @mbggenerated
     */
    public static class Criterion implements Serializable {
        private final String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private final String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
