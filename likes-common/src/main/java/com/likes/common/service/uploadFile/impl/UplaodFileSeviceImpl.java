package com.likes.common.service.uploadFile.impl;import com.alibaba.fastjson.JSONObject;import com.likes.common.constant.FileConstant;import com.likes.common.enums.StatusCode;import com.likes.common.exception.BusinessException;import com.likes.common.mybatis.entity.SysParameter;import com.likes.common.service.sys.SysParamService;import com.likes.common.service.uploadFile.UplaodFileSevice;import com.likes.common.util.StringUtils;import com.likes.common.util.uploadFile.FileNameUtils;import com.likes.common.util.uploadFile.FileUtils2;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import javax.annotation.Resource;import java.io.IOException;import java.text.SimpleDateFormat;import java.util.*;@Servicepublic class UplaodFileSeviceImpl implements UplaodFileSevice {    private final Logger log = LoggerFactory.getLogger(this.getClass());    @Resource    private SysParamService sysParamService;    @Override    public List<String> uploadFile(MultipartFile[]  files, String moduleKey, Integer type) throws IOException {        List<String> list = new ArrayList<>();        for (MultipartFile file : files) {            //获取功能上传的文件文件夹            SysParameter sp = new SysParameter();            if (!StringUtils.isEmpty(moduleKey)) {                sp = sysParamService.getByCode(moduleKey);            } else {                sp.setSysparamvalue("/common");            }            //获取文件上传头部路径            SysParameter upload_fixed_file_path = sysParamService.getByCode(FileConstant.UPLOAD_FIXED_FILE_PATH);            if (sp == null || StringUtils.isEmpty(sp.getSysparamvalue())) {                throw new BusinessException(StatusCode.UPLOAD_FILE_ERROR_130008.getCode(), StatusCode.UPLOAD_FILE_ERROR_130008.getValue());            }            // 1获得文件名字            String fileName = file.getOriginalFilename();            // 获取文件后缀名            String suffix = FileNameUtils.getSuffix(fileName);            //文件类型检测            switch (type) {                case 0:// 图片后缀名判断                    if (!suffix.equals(".jpg") && !suffix.equals(".jpeg") && !suffix.equals(".png") && !suffix.equals(".PNG")                            && !suffix.equals(".JPEG") && !suffix.equals(".JPG")) {                        throw new BusinessException(StatusCode.UPLOAD_IMG_FAILURE_130009.getCode(), StatusCode.UPLOAD_IMG_FAILURE_130009.getValue());                    }                    break;                case 1:  // 视频后缀名判断                    if (!suffix.equals(".mp4") && !suffix.equals(".MP4") && !suffix.equals(".avi") && !suffix.equals(".AVI")) {                        throw new BusinessException(StatusCode.UPLOAD_VOIDE_FAILURE_130010.getCode(), StatusCode.UPLOAD_VOIDE_FAILURE_130010.getValue());                    }                    break;                case 2:  //其他文件 跳过验证                    break;                default:                    throw new BusinessException(StatusCode.UPLOAD_VOIDE_FAILURE_130011.getCode(), StatusCode.UPLOAD_VOIDE_FAILURE_130011.getValue());            }            // 头像进行上传            Date currentTime = new Date();            SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMdd");            String dateString = formatter.format(currentTime);            Map<String, String> res = FileUtils2.upload(file, upload_fixed_file_path.getSysparamvalue() + sp.getSysparamvalue(), fileName, dateString);            SysParameter access_to_the_address = sysParamService.getByCode(FileConstant.ACCESS_TO_THE_ADDRESS);//获取访问文件头部地址            list.add(access_to_the_address.getSysparamvalue() + sp.getSysparamvalue() + "/" + dateString + "/" + res.get("newName"));        }        log.info("放回的文件访问地址参数：" + JSONObject.toJSONString(list));        return list;    }}